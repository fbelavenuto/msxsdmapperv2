ENVIRONMENT ITEMS
-----------------

                  MSX-DOS  maintains a list of 'environment  items'.
        An  environment  item  is  a named item  that  has  a  value
        associated with it.

             An  environment  item can have any name chosen  by  the
        user,  and can consist of the same characters that are valid
        in  a  filename.  The maximum length of an environment  item
        name is 255 characters. MSX-DOS provides several environment
        items set up by default.

             The value of an environment item is simply a string  of
        arbitrary  characters  up  to a maximum length  of  255.  No
        processing is performed on the characters and so the  casing
        of  characters is preserved.  Any environment item that does
        not exist has a null value (i.e. no characters).

             An  environment  item can be changed or set up  by  the
        SET   command,   which   can  also  display  currently   set
        environment items.

             The environment items set up by default and the  manner
        in which their value is interpreted are as follows:

        ECHO

             This  controls  the echoing of lines read from a  batch
        file (see HELP BATCH on Batch Files).  Any value except 'ON'
        is interpreted as 'OFF'.

        PROMPT

             This  controls the  displaying of the prompt at command
        level. The  value of  PROMPT is printed as being the prompt.
        Before   printing  however,  any  other  environment  items,
        enclosed  in  percent  signs,  will  be  replaced  by  their
        associated value.

             By  default  (i.e. when  there is  no environment  item
        called  PROMPT)  the  value  is  %_CWD%>.  The  prompt  then
        consists of  the current  drive and the current directory of
        that drive followed by '>' eg. A:\COM>. In order to do this,
        the  current  drive  must be  accessed to  read the  current
        directory and so may  take a  little longer  to appear.  For
        compatibility SET PROMPT ON is replaced  by %_CWD%>  and SET
        PROMPT OFF is replaced by %_DISK%>.

             To set  the prompt to also show the amount of free disk
        space, type:

             a:\>set prompt "(%@diskfree[@:,k]%K) %_cwd%>"

        UPPER

             This controls the upper-casing of command line  set  up
        for  a  transient program, as is stored in the default  disk
        transfer  area.  Any value except  'ON'  is  interpreted  as
        'OFF'.  There will be no visual effect unless this  is  used
        with  a  'case  sensitive' transient  program,  as  built-in
        commands do not refer default disk transfer area.

             When UPPER is OFF,  command line is not upper-cased and
        is compatible with MSX-DOS 1 programs.

             When  UPPER is ON,  command line is upper-cased and  is
        compatible with CP/M programs.

        LOWER

             This   controls  the   upper-casing  of   the  internal
        variables _BOOT,  _CWD, _CWDS,  _CWP, _CWPS,  _DIRBUFFER and
        _DISK. Any value except 'ON' is interpreted as 'OFF'.

             When  LOWER is  ON, the internal variables return their
        value in lower case.

             When LOWER is OFF, the value is returned in upper case.

        REDIR

             This  controls  the interpretation  of  redirection  or
        piping  symbols  (see HELP IO on Redirection and Piping)  on
        the command line.  Any value except 'OFF' is interpreted  as
        'ON'.

        SEPAR

             This  controls the interpretation of command separating
        characters on  the command line (see HELP EDITING on command
        separation). Any value except 'OFF' interpreted as 'ON'.

        ALIAS

             This  controls the  interpretation of aliases (see HELP
        ALI on aliases). Any value except 'OFF' interpreted as 'ON'.

             When ALIAS  is ON, alias commands are replaced by their
        associated values.

             When ALIAS is OFF, alias commands are treated as normal
        commands.

        EXPAND

             This controls  the use  of editing  facilities provided
        either  by MSX-DOS  or by  COMMAND2.COM (see HELP EDITING on
        command line editing). Any value except 'OFF' interpreted as
        'ON'.

             When EXPAND is OFF, standard MSX-DOS editing facilities
        can be used.

             When  EXPAND is  ON, new editing facilities provided by
        COMMAND2.COM can be used.

        EXPERT

             This  controls the possibility to use MSX-DOS 1 compat-
        ible disks.

             When  EXPERT if OFF, only MSX-DOS 2 formatted disks can
        be used.

             When EXPERT is ON, both MSX-DOS 1 and MSX-DOS 2 format-
        ted disks can be used.

        PATH

             The  current search path,  as set and displayed by  the
        PATH command,  is maintained as an environment item,  and it
        is this that the PATH command manipulates.

        CDPATH

             The current directory search path, as set and displayed
        by the CDPATH command, is maintained as an environment item,
        and it is this that the CDPATH command manipulates.

        TABORDER

             This determines whether directories or files  are found
        and in which order when TAB is pressed on the coommand line.
        The possible values for TABORDER  their explanations  are as
        follows:

           BOTH:     both directories and files  are found  in order
                     of appearance.
           FILE:     only files are found.
           DIR:      only directories are found.
           FILE,DIR: first files are found, then directories.
           DIR,FILE: first directories are found, then files.

        SHELL

             The  SHELL environment item indicates where the command
        interpreter (COMMAND2.COM) exists,  and is set up by default
        to where it was loaded from.  When COMMAND2 needs to re-load
        itself  from  disk (after running a  transient  command)  it
        looks  at  the SHELL environment item and attempts  to  load
        itself  from  the file that it specifies.  If this gives  an
        error  then  it  attempts  to  load  itself  from  the  root
        directory of the drive that it was originally loaded from.

             To cause COMMAND2 to re-load itself from another  drive
        or directory, COMMAND2.COM can be copied there and SHELL set
        to  refer  to it.  For example,  it might be copied  to  the
        RAMDISK  with  the  command COPY COMMAND2.COM H:\  and  then
        SHELL set with the command SET SHELL=H:\COMMAND2.COM.

        TIME

             TIME  specifies the format the the time is displayed by
        MSX-DOS.  If not '24', which indicates that it is  displayed
        as a 24-hour time,   then '12' is assumed,  which  indicates
        that  it is displayed as a 12-hour time with an am.  or  pm.
        indication.  The  TIME environment item does not apply  when
        the  time is input because it can be input in either  format
        unambiguously.

        DATE

             DATE  specifies  the format the date is  displayed  and
        input  by MSX-DOS.  It defaults to a format appropriate  for
        the country of origin of the MSX machine.  It takes the form
        of   three  letters  or  three  letter  pairs  separated  by
        date/time separators  (see HELP DATE).  To set the  American
        format,  for example, the command SET DATE=MM/DD/YY could be
        given.

        HELP

             When the HELP command is given the name of command  for
        which  help  is  required,  then it  reads  the  information
        displayed from a file on disk. This file is in the directory
        specified  by  the HELP environment item.  It defaults to  a
        directory  called  HELP in the root directory of  the  drive
        that MSX-DOS was booted from.

        APPEND

             APPEND is not actually defined by default, but when set
        up is an environment item that has a special meaning to  the
        system. It is used only with standard CP/M programs.

             CP/M  programs  do  not know  how  to  use  directories
        because CP/M does not have directories, but instead just has
        the equivalent of the current directory. When such a program
        opens  a file,  it searches for it only within  this  single
        directory and thus only has drives and filenames, not paths.

             When  a CP/M program is run under MSX-DOS and  attempts
        to  open a file,  it only searches for the filename  in  the
        current directory of the appropriate drive.  Similarly, when
        the  user types in a filename to a CP/M program it may  only
        contain  a drive and filename,  and thus also refers only to
        files in the current directory.

             When  this search is performed through MSX-DOS,  if the
        file is not found in the current directory,  then the APPEND
        environment item is looked at.  If it is not set up then the
        file has not been found. If set up, then it is assumed to be
        a path name, and specifies a single alternative directory in
        which the search for the file continues.

             This  will  only be of use if the CP/M program opens  a
        file and then reads or writes to it.  If it attempts to, for
        example,  delete a file or create a file,  then APPEND  will
        not be used. Indeed, it may have undesirable effects and for
        this  reason it is recommended that APPEND is used  normally
        only  in a batch file which sets it up,  executes  the  CP/M
        program, and then unsets it again.

             Typical   uses  for  APPEND  include   specifying   the
        directory  in which large programs (such as word  processors
        and database programs) find 'overlay' or messages files, and
        specifying the directory in which compilers,  assemblers and
        linkers  find their source and working files.  Typical cases
        for  which APPEND is not suitable and may  have  undesirable
        effects include editing a file with a wordprocessor when the
        file  to be edited probably cannot be in a  directory  other
        than the current one, even if APPEND is set up.

        PROGRAM and PARAMETERS

             These   special   environment  items  are  set  up   by
        COMMAND2.COM  when  a  transient  command  is  executed  and
        removed  when it finishes,  and should thus be  avoided  for
        general use.

        TEMP

             When piping is performed  (see HELP IO  on  Redirection
        and  Piping) it is necessary for COMMAND2.COM to create  one
        or  more  temporary  files,  and the TEMP  environment  item
        indicates  the drive and directory in which these  temporary
        files are to be created.  By default,  it refers to the root
        directory of the boot drive,  and typically  may be  changed
        to  refer  to a RAM disk since this increases the  speed  of
        piping.

             Although the standard MSX-DOS system only uses TEMP for
        piping, any other programs and utilities that need to create
        temporary files may also use the TEMP environment item.


INTERNAL VARIABLES

             The  following variables are not actually stored in the
        environment, but can be used in commands, aliases, and batch
        files just  like any  other environment variable. The values
        of  these  variables  are  stored  internally and  cannot be
        changed with the SET command.

             These  internal variables are often used in batch files
        and aliases  to examine  system resources  and adjust to the
        current  computer  settings.  The contents  of any  internal
        variable  can  be  examined  from  the command  line with  a
        command like this:

        A:\>ECHO %VARIABLENAME%

             In  the  list  below,  the  possible  values  for  most
        variables are shown in double quotes for ease of understand-
        ing.  The actual  values returned  by the  variables do  not
        include the double quotes.

        _BG:  This is  a string  containing the current screen back-
        ground color (for example, "4").

        _BOOT: This is the boot drive letter, without a colon.

        _COLUMN:  This  is a  string containing  the current  cursor
        column (for example, "1" for the left side of the screen).

        _COLUMNS: This  is a string containing the current number of
        screen columns (for example, "80").

        _CPU : This is the cpu type, returned as a string:

             Z80        Standard MSX or Turbo-R in Z80 mode
             R800       Turbo-R in R800 RAM or ROM mode

        _CWD:  This is  the current directory in the format d:\path-
        name.

        _CWDS:  has the same value as _CWD, except it ends the path-
        name with a backslash [\].

        _CWP: This is the current directory in the format \pathname.

        _CWPS: has  the same value as _CWP, except it ends the path-
        name with a backslash [\].

        _DATE:  This contains the current system date, in the format
        dd-mm-yy  (or  depending  on  the value  of the  environment
        variable DATE).

        _DATEF: This contains the current system date, in the format
        dd-mm-yyyy  (or depending  on the  value of  the environment
        variable DATE).

        _DIRBUFFER: This  contains the  directory, that is currently
        stored  in the directory buffer. The CD - and CDD - commands
        use this buffer to determine the directory to return to.

        _DISK: This  is the current disk drive, without a colon (for
        example, "A").

        _DOSVER:  This   is  the  current  COMMAND2  version  (which
        currently is "2.44").

        _DOW: This  is a  string containing  the current  day of the
        week ("Monday", "Tuesday", "Wednesday", etc.).

        _DRIVEMAP: This returns available  drives in  8 bits.  A '1'
        indicates the drive exists, a '0'  indicates the  drive does
        not exist. Drive H: is located on the left, drive A:  on the
        right.

        _ERROR: This  is the error code of the previous command. See
        the  "Program Interface Specification" for a list of all the
        currently defined  error codes  and the  messages for  them.
        (For   example  "215"   for  "File  not  found",  "142"  for
        "Unrecognized command", "0" for no error.)

        _FG:  This is  a string  containing the current screen fore-
        ground color (for example, "4").

        _FILECOUNT:  This the  the total number of files returned by
        the @FFIRST en _FNEXT variables.

        _FNEXT: This  is the filename and extension of the next file
        that  matches  the  filespec  specified  using  the  @FFIRST
        variable  function. Always  use @FFIRST before using _FNEXT.
        Note that the information required to find the next filename
        is  corrupted  by using  the COPY  command or  any transient
        command.

        _MSXVER: This is the MSX type, returned as a string:

             MSX
             MSX-2
             MSX-2+
             Turbo-R

        _ROW: This  is the  current cursor row (for example, "1" for
        the top of the screen).

        _ROWS:  This  is  the  current  number of  screen rows  (for
        example, "24").

        _SHELL: This returns the current shell of  COMMAND2.COM. "0"
        is the original program, "1" is the first shell, etc.

        _TIME: This  contains the  current system time in the format
        hh:mm:ss.   (Depending  on  the  value  of  the  environment
        variable  TIME,  the result  will be  in the  12 or  24 hour
        format.)

             The  _BOOT, _CWD,  _CWDS, _CWP,  _CWPS, _DIRBUFFER  and
        _DISK variables  will return  their result in upper or lower
        case  depending  on  the value  of the  environment variable
        LOWER.

             The  _DOW  variable  returns  the first  letter of  the
        result in upper case and the rest in lower case.


VARIABLE FUNCTIONS

             Variable  functions  are  like internal  variables, but
        they  take one  or more  arguments, and they return a value.
        Like  all  environment variables,  these variable  functions
        must be  enclosed in  percent signs in normal use (%@ALIAS%,
        %@ASCII%,  etc.). All  variable functions  must have  square
        brackets  enclosing   their  argument(s).  If  you  embed  a
        variable  function  in  the  PROMPT it  must be  enclosed in
        either single (') or double quotes (").

             The  variable functions are useful in aliases and batch
        files  to  check on  available system  resources, manipulate
        strings and  numbers, and  work with  filenames. Some of the
        variable  functions, like  @DISKFREE, are shown with "b|k|m"
        as one  of their  arguments. Those functions return a number
        of  bytes,  kilobytes,  or  megabytes  based upon  a "b|k|m"
        argument:

         B     return the number of bytes
         K     return the number of kilobytes (bytes / 1,024)
         M     return the number of megabytes (bytes / 1,048,576)

             Instead of  a parameter,  a variable  function may also
        have  another variable function, or internal variable, whose
        value serves  as a parameter for the previous variable func-
        tion. For example:

             a:\>echo %@diskfree[%_disk%:,k]%

             This returns  the free amount of disk space on the cur-
        rent drive.

             The depth of the recursive use of variable functions is
        unlimited, as long as it fits on the command line, which has
        a maximum length of 127 characters.

             When an error occurs either in the given parameters, or
        during disk access, then a null string is returned.


        @ALIAS[name]: Returns the contents of the specified alias as
        a string, or a null string if the alias doesn't exist.

        @ASCII[c]: Returns  the numeric value of the specified ASCII
        character as a string. For example %@ASCII[A]% returns 65.

        @ATTRIB[filespec,attrib]:  Returns  a  "1" if  the specified
        file has the matching attribute(s); otherwise returns a "0".
        The attributes are:

         N     Normal (no attribute bits set)
         R     Read-only
         H     Hidden
         S     System
         D     Directory
         A     Archive

        The  attributes (other  than N) can be combined; ATTRIB will
        only return  a 1  if all  the attributes match (both set and
        reset).

        @CHAR[n]:  Returns the  character corresponding  to an ASCII
        numeric value. For example %@CHAR[65]% returns A.

        @DISKFREE[d:,b|k|m]:  Returns the  amount of free disk space
        on the specified drive. Use @: for the current drive.

        @DISKTOTAL[d:,b|k|m]: Returns  the total  disk space  on the
        specified drive. Use @: for the current drive.

        @DISKUSED[d:,b|k|m]: Returns the amount of disk space in use
        by  files and directories on the specified drive. Use @: for
        the current drive.

        @DRIVE[filespec]:  Returns  the  drive  letter (including  a
        colon) from  the filespec.  If no  drive was specified, then
        the current drive is returned.

        @EXT[filespec]: Returns the extension from a filename, with-
        out  a leading period. An extension always has a length of 3
        characters. If no extension was found, then a null string is
        returned.

        @FFIRST[filespec]: Returns the filename and extension of the
        first file that matches the filespec.

        @FILE[filespec]: Returns  the filename  from a filespec, in-
        cluding an extension.

        @FILEATTR[filespec]:  Returns the  attributes of  a file  or
        directory. The attributes are (from left to right):

         A     Archive
         D     Directory
         V     Volume name
         S     System
         H     Hidden
         R     Read-only

        @FILEDATE[filespec]:  Returns  the  date  a  file  was  last
        modified,   in  the  format  specified  by  the  environment
        variable DATE.

        @FILESIZE[filespec,b|k|m]: Returns the size of a file.

        @FILETIME[filespec]:  Returns  the  time  a  file  was  last
        modified, in  hh:mm:ss format.  Depending on the environment
        variable  TIME, the  time will  be in the 12-hour or 24-hour
        format.

        @FILETOTAL[b|k|m]:  Returns the total amount of bytes in the
        files returned by the @FFIRST en _FNEXT variables.

        @FULL[filespec]:  Returns  the  full  pathname, including  a
        drive letter, for the filespec.

        @HEX[n]: Returns  the hexadecimal  value of n, which must be
        in  the range 1 to 65,535. The result is always a four digit
        representation.

        @INSTR[n,string1,string2]:  Returns the  position of string2
        within string1,  starting at position "n". When "n" is omit-
        ted, it defaults to the start of the string. The first posi-
        tion in string1 is numbered 1. If string2 is not found, then
        a  "0" is  returned. If  string1 includes commas, it must be
        quoted  with  double quotes  (") or  single quotes  ('). The
        quotes do  not count in calculating the position of string2.
        String2  does not  have to  be quoted, unless the quotes are
        really part of the string.

        @LABEL[d:]: Returns  the volume  label of the specified disk
        drive. The drive, if omitted, defaults to the current drive.

        @LEFT[string,n]:  Returns  the first  "n" characters  from a
        string.  If n is negative, then it is relative to the end of
        the string. (For example: @LEFT[abcdef,-1] returns abcde.)

        @LEN[string]: Returns the length of a string.

        @LOWER[string]: Returns the string converted to lower case.

        @MID[string,start,length]: Returns  a substring, starting at
        the position "start" and continuing for "length" characters.
        If  the length  is omitted, it will default to the remainder
        of the string. The first character in the string is numbered
        1. If  the string  includes commas,  it must  be quoted with
        double  quotes (")  or single  quotes ('). The qoutes do not
        count in  calculating the  position of  the substring  to be
        extracted.

        @NAME[filespec]: Returns  the base  name of  a file, without
        the  path or extension. A base name has always a length of 8
        characters. If no base name was found, then a null string is
        returned.

        @NEWNAME[filename1,filename2]:  Returns filename2. Any wild-
        cards ('*' or '?') are replaced by the corresponding charac-
        ters from filename1.

        @PARSE[filespec]: Returns  a binary string set up by parsing
        the filespec. The bit assignments are as follows:

        b0 - set if any characters parsed other than drive name
        b1 - set if any directory path specified
        b2 - set if any drive name specified
        b3 - set if main filename specified in last item
        b4 - set if filename extension specified in last item
        b5 - set if last item is ambiguous
        b6 - set if last item is "." or ".."
        b7 - set if last item is ".."

        Note that  bit 7  is the  first character in the string, and
        bit  0 is  the last. A set bit is represented by a "1" and a
        reset bit is represented by a "0".

        @PATH[filespec]: Returns the path from a filename, including
        the  drive letter and a trailing backslash but not including
        the base name or extension.

        @READY[d:]: Returns "1" when the specified drive is ready.

        @RIGHT[string,n]:  Returns the  last "n"  characters from  a
        string.

        @STRING[n,string]: Returns a string with the first character
        of a string "n" times. "n" can be up to 122.

        @UPPER[string]: Returns the string converted to upper case.

             The  @EXT, @FFIRST, @NAME and @NEWNAME variables return
        their value in upper case. The @LEFT, @MID, @NAME, @PATH and
        @RIGHT variables  return their value depending on the casing
        of the parameter.

